inicio:

-> dentro da pasta backend:

    - npm init -y

-> usar o typescript em desemvolvimento - qndo fizer o bild em producao ele vira o js

    - yarn add typescript -D

-> Express pra usar as Apis

    -yarn add express

-> Instalar as tiagens do express

    - yarn add @type/express -D

-> Pra inicializar o typescript

    - yarn tsc --init

- Para rodar o typescript (biblioteca ts-node-dev / nodermom atualiza a pagina )

    - yarn add ts-node-dev -D


Comando start dentro da pagina package.json:

scripts": {
    "dev": "ts-node-dev src/server.ts"
  },

- Pode também deixar seu script start apenas para fazer compilar e dar o start, deixando ele assim:

    "dev": "ts-node-dev --transpile-only src/server.ts"


obs:

Esse comando `"dev": "ts-node-dev --transpile-only src/server.ts"` é uma linha de script no `package.json`
de um projeto Node.js usando TypeScript. Vamos entender o que cada parte faz:

### Componentes do Comando

1. **`ts-node-dev`**:
   - Esse é um pacote que combina `ts-node` e `nodemon`.
   - **`ts-node`** permite executar arquivos TypeScript diretamente sem precisar transpilar manualmente para JavaScript.
   - **`nodemon`** é uma ferramenta que reinicia automaticamente o servidor quando detecta mudanças nos arquivos.
   - **`ts-node-dev`** combina esses recursos para fornecer uma experiência de desenvolvimento onde o servidor é
   reiniciado automaticamente quando há mudanças no código TypeScript, mas sem a necessidade de uma transpilação manual.

2. **`--transpile-only`**:
   - Esse é um argumento para `ts-node-dev` que diz para transpilar o código TypeScript para JavaScript sem fazer verificações
   completas de tipo (`type-checking`).
   - Isso pode acelerar o processo de desenvolvimento porque ignora a verificação de tipos, que pode ser lenta em projetos maiores.
   No entanto, isso significa que alguns erros de tipo podem não ser capturados até que você faça uma transpilação completa com o `tsc`.

3. **`src/server.ts`**:
   - Este é o caminho para o arquivo principal do servidor que você deseja executar.
   O `ts-node-dev` vai monitorar esse arquivo e quaisquer outros arquivos importados,
   reiniciando o servidor automaticamente se eles mudarem.

### Em Resumo

O comando `"dev": "ts-node-dev --transpile-only src/server.ts"` é usado para iniciar o servidor em modo de
desenvolvimento com TypeScript. Ele compila e executa o código TypeScript diretamente, monitorando mudanças no código e
reiniciando automaticamente o servidor, sem fazer a verificação completa de tipos para acelerar o processo de desenvolvimento.



--------------------------------------------------

inicio

    - npm init -y
    - yarn add typescript -D
    - yarn add express
    - yarn add @type/express -D     / instalar as tipagens to typescript
    - yarn tsc --init
    - yarn add ts-node-dev -D       / nodemon - atualizar pagina auto
    - yarn add express-async-errors / para tratar errors
    - yarn add cors                 / par liberar qualquer ip para fazer requisicao